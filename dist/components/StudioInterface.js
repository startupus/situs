import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { useSite } from '../contexts/SiteContext';
import { useLanguage } from '../hooks/useLanguage';
import { useTheme } from '../hooks/useTheme';
import { useCanvasTheme } from '../hooks/useCanvasTheme';
import RedaktusEditor from './RedaktusEditor';
export function StudioInterface() {
    const { state, actions } = useSite();
    const { language, setLanguage, t } = useLanguage();
    const { theme, toggleTheme, resolvedTheme } = useTheme();
    const { theme: canvasTheme, resolvedTheme: canvasResolvedTheme, toggleTheme: toggleCanvasTheme } = useCanvasTheme();
    const [selectedPageId, setSelectedPageId] = useState(null);
    const [isEditMode, setIsEditMode] = useState(false);
    if (state.loading) {
        return (_jsx("div", { className: "min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4" }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430 Redaktus Studio..." })] }) }));
    }
    if (state.error) {
        return (_jsx("div", { className: "min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-red-500 text-xl mb-4", children: "\u26A0\uFE0F \u041E\u0448\u0438\u0431\u043A\u0430" }), _jsx("p", { className: "text-gray-600 dark:text-gray-400", children: state.error }), _jsx("button", { onClick: () => actions.loadSites(), className: "mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700", children: "\u041F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u044C \u043F\u043E\u043F\u044B\u0442\u043A\u0443" })] }) }));
    }
    // Если включен режим редактирования, показываем полный редактор
    if (isEditMode) {
        return (_jsx("div", { className: "min-h-screen bg-white", children: _jsx(RedaktusEditor, { mode: "editor" }) }));
    }
    return (_jsxs("div", { className: `min-h-screen transition-colors duration-200 ${resolvedTheme === 'dark' ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'}`, children: [_jsx("header", { className: `border-b transition-colors duration-200 ${resolvedTheme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'}`, children: _jsxs("div", { className: "px-6 py-4 flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("h1", { className: "text-xl font-bold", children: "Redaktus Studio" }), state.currentSite && (_jsx("div", { className: "text-sm text-gray-500", children: state.currentSite.name }))] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("a", { href: "/situs", className: "px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors", children: "\uD83C\uDFE2 Situs Platform" }), _jsx("a", { href: "/redaktus", className: "px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 transition-colors", children: "\uD83C\uDFA8 Redaktus Editor" }), _jsxs("button", { onClick: () => setLanguage(language === 'ru' ? 'en' : 'ru'), className: "flex items-center space-x-1 px-2 py-1 rounded hover:bg-gray-100 dark:hover:bg-gray-700", children: [_jsx("span", { children: language === 'ru' ? '🇷🇺' : '🇺🇸' }), _jsx("span", { className: "text-sm font-medium", children: language.toUpperCase() })] }), _jsx("button", { onClick: toggleTheme, className: "p-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700", title: "\u041F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0442\u0435\u043C\u0443 \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430", children: resolvedTheme === 'dark' ? '☀️' : '🌙' }), _jsx("button", { onClick: toggleCanvasTheme, className: "p-2 rounded hover:bg-gray-100 dark:hover:bg-gray-700", title: "\u041F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0442\u0435\u043C\u0443 \u043A\u0430\u043D\u0432\u0430\u0441\u0430", children: canvasResolvedTheme === 'dark' ? '🎨🌙' : '🎨☀️' })] })] }) }), _jsxs("div", { className: "flex h-[calc(100vh-73px)]", children: [_jsx("aside", { className: `w-80 border-r transition-colors duration-200 ${resolvedTheme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'}`, children: _jsxs("div", { className: "p-4", children: [_jsx("h2", { className: "text-lg font-semibold mb-4", children: "\u041F\u0440\u043E\u0435\u043A\u0442\u044B" }), _jsx("div", { className: "space-y-2 mb-6", children: state.sites.map((site) => (_jsxs("div", { className: `p-3 rounded-lg cursor-pointer transition-colors ${state.currentSite?.id === site.id
                                            ? 'bg-blue-100 dark:bg-blue-900'
                                            : 'hover:bg-gray-100 dark:hover:bg-gray-700'}`, onClick: () => {
                                            actions.selectSite(site.id);
                                            setIsEditMode(false); // Сбрасываем режим редактирования при смене сайта
                                        }, children: [_jsx("div", { className: "font-medium", children: site.name }), _jsx("div", { className: "text-sm text-gray-500", children: site.domain || 'Нет домена' }), _jsxs("div", { className: "text-xs text-gray-400", children: [site.pages.length, " \u0441\u0442\u0440\u0430\u043D\u0438\u0446"] })] }, site.id))) }), state.currentSite && (_jsxs("div", { children: [_jsx("h3", { className: "text-md font-semibold mb-3", children: "\u0421\u0442\u0440\u0430\u043D\u0438\u0446\u044B" }), _jsxs("div", { className: "space-y-1", children: [state.currentSite.pages.map((page) => (_jsxs("div", { className: `p-2 rounded cursor-pointer transition-colors ${state.currentPage?.id === page.id
                                                        ? 'bg-blue-100 dark:bg-blue-900'
                                                        : 'hover:bg-gray-100 dark:hover:bg-gray-700'}`, onClick: () => {
                                                        actions.selectPage(page.id);
                                                        setIsEditMode(false); // По умолчанию показываем просмотр
                                                    }, children: [_jsx("div", { className: "font-medium text-sm", children: page.title }), _jsx("div", { className: "text-xs text-gray-500", children: page.isHomePage ? '🏠 Главная' : `/${page.slug}` })] }, page.id))), _jsx("button", { onClick: () => {
                                                        const title = prompt('Название страницы:');
                                                        const slug = prompt('URL slug:');
                                                        if (title && slug) {
                                                            actions.createPage({
                                                                title,
                                                                slug,
                                                                content: [],
                                                                isHomePage: false,
                                                                isPublished: false
                                                            });
                                                        }
                                                    }, className: "w-full p-2 mt-2 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded text-sm text-gray-500 hover:border-gray-400 hover:text-gray-600", children: "+ \u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443" })] })] }))] }) }), _jsxs("main", { className: "flex-1 flex flex-col", children: [_jsx("div", { className: `border-b p-3 transition-colors duration-200 ${resolvedTheme === 'dark' ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'}`, children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("div", { className: "flex items-center space-x-4", children: state.currentPage && (_jsxs("div", { children: [_jsx("span", { className: "font-medium", children: state.currentPage.title }), _jsxs("span", { className: "text-sm text-gray-500 ml-2", children: ["(", state.currentPage.isHomePage ? 'Главная' : state.currentPage.slug, ")"] })] })) }), _jsx("div", { className: "flex items-center space-x-2", children: state.currentPage && (_jsx("button", { onClick: () => setIsEditMode(true), className: "px-4 py-2 text-sm bg-blue-600 text-white rounded hover:bg-blue-700", children: "\u270F\uFE0F \u041E\u0442\u043A\u0440\u044B\u0442\u044C \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440" })) })] }) }), _jsx("div", { className: `flex-1 redaktus-canvas transition-colors duration-200 ${canvasResolvedTheme === 'dark' ? 'dark' : ''}`, style: {
                                    backgroundColor: canvasResolvedTheme === 'dark' ? '#111827' : '#ffffff',
                                    color: canvasResolvedTheme === 'dark' ? '#f9fafb' : '#1f2937',
                                    colorScheme: canvasResolvedTheme === 'dark' ? 'dark' : 'light'
                                }, children: _jsx("div", { className: "h-full overflow-y-auto p-8", children: state.currentPage ? (_jsxs("div", { className: "max-w-4xl mx-auto", children: [_jsx("h1", { className: "text-3xl font-bold mb-8", children: state.currentPage.title }), state.currentPage.content.length > 0 ? (_jsx("div", { className: "space-y-6", children: state.currentPage.content.map((block) => (_jsxs("div", { className: `p-4 border-2 border-dashed rounded-lg transition-colors ${canvasResolvedTheme === 'dark'
                                                        ? 'border-gray-600 bg-gray-800'
                                                        : 'border-gray-300 bg-gray-50'}`, children: [_jsxs("div", { className: "text-sm text-gray-500 mb-2", children: ["\u0411\u043B\u043E\u043A: ", block.type] }), block.type === 'hero-unit' && (_jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: block.props.title }), _jsx("p", { className: "text-lg", children: block.props.text })] })), block.type === 'text-content' && (_jsxs("div", { children: [block.props.title && (_jsx("h3", { className: "text-xl font-semibold mb-2", children: block.props.title })), _jsx("p", { children: block.props.content })] }))] }, block.id))) })) : (_jsxs("div", { className: `text-center py-16 ${canvasResolvedTheme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`, children: [_jsx("div", { className: "text-4xl mb-4", children: "\uD83D\uDCDD" }), _jsx("h3", { className: "text-xl font-semibold mb-2", children: "\u0421\u0442\u0440\u0430\u043D\u0438\u0446\u0430 \u043F\u0443\u0441\u0442\u0430" }), _jsx("p", { children: "\u041D\u0430\u0436\u043C\u0438\u0442\u0435 \"\u041E\u0442\u043A\u0440\u044B\u0442\u044C \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\" \u0434\u043B\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u043A\u043E\u043D\u0442\u0435\u043D\u0442\u0430" })] }))] })) : (_jsxs("div", { className: `text-center py-16 ${canvasResolvedTheme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`, children: [_jsx("div", { className: "text-4xl mb-4", children: "\uD83C\uDFA8" }), _jsx("h3", { className: "text-xl font-semibold mb-2", children: "\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443" }), _jsx("p", { children: "\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443 \u0438\u0437 \u043B\u0435\u0432\u043E\u0439 \u043F\u0430\u043D\u0435\u043B\u0438 \u0434\u043B\u044F \u043D\u0430\u0447\u0430\u043B\u0430 \u0440\u0430\u0431\u043E\u0442\u044B" })] })) }) })] })] })] }));
}
//# sourceMappingURL=StudioInterface.js.map