import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { FaCube, FaExternalLinkAlt, FaChevronDown, FaUser, FaCalendarDay, FaSave, FaCheck, FaExclamationTriangle } from 'react-icons/fa';
import { useLanguage } from '../../hooks/useLanguage';
const EditorNavbar = ({ currentPage = "Home", onSave, autosaveEnabled = true, isSaving = false, lastSaved = null, saveError = null }) => {
    const { t } = useLanguage();
    const [userDropdownOpen, setUserDropdownOpen] = useState(false);
    const [activeTab, setActiveTab] = useState('editor');
    console.log('ðŸŽ¯ EditorNavbar rendering - should be visible at top');
    return (_jsx("header", { className: "redaktus-editor-navbar flex w-full items-center border-b h-14 shadow-sm z-50 relative transition-colors duration-200 bg-white border-gray-200 dark:bg-gray-800 dark:border-gray-700", children: _jsx("div", { className: "w-full px-6", children: _jsxs("div", { className: "flex items-center justify-between h-full", children: [_jsx("div", { className: "flex items-center", children: _jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(FaCube, { className: "text-gray-600 text-xl" }), _jsx("span", { className: "text-lg font-bold tracking-wide transition-colors duration-200 text-gray-900 dark:text-gray-100", children: "REDAKTUS" })] }) }), _jsxs("div", { className: "flex items-center space-x-8", children: [_jsx(NavTab, { active: activeTab === 'editor', onClick: () => setActiveTab('editor'), children: t('editor.tabs.editor') }), _jsx(NavTab, { active: activeTab === 'media', onClick: () => setActiveTab('media'), children: t('editor.tabs.media') }), _jsx(NavTab, { active: activeTab === 'playground', onClick: () => setActiveTab('playground'), children: t('editor.tabs.playground') })] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [isSaving && (_jsxs("div", { className: "flex items-center space-x-2 text-blue-600 dark:text-blue-400", children: [_jsx("div", { className: "animate-spin rounded-full h-4 w-4 border-b-2 border-current" }), _jsx("span", { className: "text-sm", children: t('editor.navbar.saving') })] })), saveError && (_jsxs("div", { className: "flex items-center space-x-2 text-red-600 dark:text-red-400", children: [_jsx(FaExclamationTriangle, { size: 14 }), _jsx("span", { className: "text-sm", children: t('editor.navbar.saveError') })] })), lastSaved && !isSaving && !saveError && (_jsxs("div", { className: "flex items-center space-x-2 text-green-600 dark:text-green-400", children: [_jsx(FaCheck, { size: 14 }), _jsx("span", { className: "text-sm", children: t('notifications.saved', { time: lastSaved.toLocaleTimeString() }) })] }))] }), _jsxs("button", { onClick: onSave, disabled: isSaving, className: `inline-flex items-center space-x-2 px-4 py-2 border rounded-md text-sm font-medium focus:outline-none transition-colors ${isSaving
                                    ? 'border-gray-300 text-gray-400 cursor-not-allowed dark:border-gray-600 dark:text-gray-500'
                                    : 'border-gray-300 text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700'}`, children: [_jsx(FaSave, { size: 12 }), _jsx("span", { children: t('editor.navbar.save').toUpperCase() })] }), _jsxs("button", { className: "inline-flex items-center space-x-2 px-4 py-2 border rounded-md text-sm font-medium focus:outline-none transition-colors border-gray-300 text-gray-700 hover:bg-gray-50 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700", children: [_jsx(FaExternalLinkAlt, { size: 12 }), _jsx("span", { children: t('editor.navbar.viewSite').toUpperCase() })] }), _jsx("button", { className: "p-2 rounded-md transition-colors text-gray-600 hover:text-gray-800 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-gray-100 dark:hover:bg-gray-700", children: _jsx(FaCalendarDay, { size: 16 }) }), _jsxs("div", { className: "relative", children: [_jsxs("button", { onClick: () => setUserDropdownOpen(!userDropdownOpen), className: "flex items-center space-x-2 p-1 rounded-md transition-colors text-gray-600 hover:text-gray-800 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-gray-100 dark:hover:bg-gray-700", children: [_jsx("div", { className: "h-8 w-8 rounded-full bg-gradient-to-br from-red-400 to-pink-500 flex items-center justify-center", children: _jsx("span", { className: "text-white font-medium text-sm", children: "RU" }) }), _jsx(FaChevronDown, { size: 12 })] }), userDropdownOpen && (_jsxs("div", { className: "absolute right-0 top-full mt-2 w-48 rounded-lg shadow-lg border py-2 z-50 bg-white border-gray-200 dark:bg-gray-800 dark:border-gray-700", children: [_jsx(DropdownItem, { icon: _jsx(FaUser, { size: 14 }), children: "Profile" }), _jsx("div", { className: "border-t my-2 border-gray-100 dark:border-gray-700" }), _jsx(DropdownItem, { children: "Sign out" })] }))] })] })] }) }) }));
};
const NavTab = ({ children, active = false, onClick }) => {
    return (_jsx("button", { onClick: onClick, className: `px-4 py-2 text-sm font-medium rounded-md transition-colors ${active
            ? 'bg-gray-100 text-gray-700 dark:bg-gray-600 dark:text-gray-200'
            : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-gray-100 dark:hover:bg-gray-700'}`, children: children }));
};
const DropdownItem = ({ children, icon, onClick }) => {
    return (_jsxs("button", { onClick: onClick, className: "w-full flex items-center space-x-2 px-4 py-2 text-sm transition-colors text-gray-700 hover:text-gray-900 hover:bg-gray-100 dark:text-gray-300 dark:hover:text-gray-100 dark:hover:bg-gray-700", children: [icon && _jsx("span", { className: "text-gray-400", children: icon }), _jsx("span", { children: children })] }));
};
export default EditorNavbar;
//# sourceMappingURL=EditorNavbar.js.map