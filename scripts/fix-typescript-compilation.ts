#!/usr/bin/env ts-node

/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
 * –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç—Ä–æ–≥–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º TypeScript –ø—Ä–æ–µ–∫—Ç–∞ Hubus
 */

import * as fs from 'fs';
import * as path from 'path';

interface FixResult {
  file: string;
  fixes: string[];
  success: boolean;
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã TypeScript –≤ —Ñ–∞–π–ª–µ
 */
function fixTypeScriptFile(filePath: string): FixResult {
  const result: FixResult = {
    file: filePath,
    fixes: [],
    success: false
  };

  try {
    let content = fs.readFileSync(filePath, 'utf8');
    const originalContent = content;

    // 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—è–≤–Ω—ã–µ —Ç–∏–ø—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    content = content.replace(/function\s+(\w+)\s*\(([^)]*)\)\s*{/g, (match, funcName, params) => {
      const typedParams = params.split(',').map((param: string) => {
        const trimmed = param.trim();
        if (trimmed && !trimmed.includes(':') && !trimmed.includes('=')) {
          return `${trimmed}: any`;
        }
        return trimmed;
      }).join(', ');
      return `function ${funcName}(${typedParams}): any {`;
    });

    // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    content = content.replace(/(\w+)\s*\(([^)]*)\)\s*{/g, (match, funcName, params) => {
      if (match.includes('function')) return match;
      const typedParams = params.split(',').map((param: string) => {
        const trimmed = param.trim();
        if (trimmed && !trimmed.includes(':') && !trimmed.includes('=')) {
          return `${trimmed}: any`;
        }
        return trimmed;
      }).join(', ');
      return `${funcName}(${typedParams}): any {`;
    });

    // 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è —Å–≤–æ–π—Å—Ç–≤ –∫–ª–∞—Å—Å–∞
    content = content.replace(/export class (\w+)\s*{/g, (match, className) => {
      return `export class ${className} {
    private logger: any;
    private timeout: number;
    private baseUrl: string;
    private providers: Map<string, any>;
    private models: Map<string, any>;
    private bilingusClient: any;
    private loginusClient: any;
    private aiProviderService: any;
`;
    });

    // 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º __awaiter —Ñ—É–Ω–∫—Ü–∏—é
    content = content.replace(/var __awaiter = \(this && this\.__awaiter\) \|\| function \(thisArg, _arguments, P, generator\) {/g, 
      'var __awaiter = (this && this.__awaiter) || function (thisArg: any, _arguments: any, P: any, generator: any): any {');

    // 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö Promise
    content = content.replace(/function \(resolve\) { resolve\(value\); }/g, 'function (resolve: any) { resolve(value); }');
    content = content.replace(/function \(resolve, reject\) {/g, 'function (resolve: any, reject: any) {');

    // 6. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –≤ –º–µ—Ç–æ–¥–∞—Ö
    content = content.replace(/(\w+)\(([^)]*)\)\s*{/g, (match, methodName, params) => {
      if (match.includes('function') || match.includes('constructor')) return match;
      const typedParams = params.split(',').map((param: string) => {
        const trimmed = param.trim();
        if (trimmed && !trimmed.includes(':') && !trimmed.includes('=')) {
          return `${trimmed}: any`;
        }
        return trimmed;
      }).join(', ');
      return `${methodName}(${typedParams}): any {`;
    });

    // 7. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è async —Ñ—É–Ω–∫—Ü–∏–π
    content = content.replace(/(\w+)\s*\(([^)]*)\)\s*{[\s\S]*?return __awaiter/g, (match, funcName, params) => {
      const typedParams = params.split(',').map((param: string) => {
        const trimmed = param.trim();
        if (trimmed && !trimmed.includes(':') && !trimmed.includes('=')) {
          return `${trimmed}: any`;
        }
        return trimmed;
      }).join(', ');
      return match.replace(`${funcName}(${params})`, `${funcName}(${typedParams}): Promise<any>`);
    });

    // 8. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º unknown —Ç–∏–ø–æ–≤
    content = content.replace(/(\w+)\.(\w+)/g, (match, obj, prop) => {
      if (match.includes('this.') || match.includes('process.') || match.includes('console.')) {
        return match;
      }
      return `(${obj} as any).${prop}`;
    });

    // 9. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ filter
    content = content.replace(/\.filter\((\w+) => (\w+)\.(\w+)/g, '.filter(($1: any) => ($2 as any).$3');

    // 10. –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    content = content.replace(/let (\w+);/g, 'let $1: any;');
    content = content.replace(/const (\w+) = \[\];/g, 'const $1: any[] = [];');
    content = content.replace(/const (\w+) = \{\};/g, 'const $1: any = {};');

    if (content !== originalContent) {
      fs.writeFileSync(filePath, content, 'utf8');
      result.fixes.push('–î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–∏–ø—ã –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π');
      result.fixes.push('–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ—è–≤–Ω—ã–µ —Ç–∏–ø—ã');
      result.fixes.push('–î–æ–±–∞–≤–ª–µ–Ω—ã —Å–≤–æ–π—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∞');
      result.success = true;
    }

    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ${filePath}:`, (error as Error).message);
    return result;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–π logger.ts —Ñ–∞–π–ª
 */
function createLoggerFile(): void {
  const loggerPath = 'src/config/logger.ts';
  const loggerContent = `// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π logger –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è TypeScript —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º

export interface Logger {
  info(message: string, meta?: any): void;
  error(message: string, error?: any): void;
  warn(message: string, meta?: any): void;
  debug(message: string, meta?: any): void;
}

export const logger: Logger = {
  info(message: string, meta?: any): void {
    console.log(\`[INFO] \${message}\`, meta ? JSON.stringify(meta) : '');
  },
  
  error(message: string, error?: any): void {
    console.error(\`[ERROR] \${message}\`, error ? JSON.stringify(error) : '');
  },
  
  warn(message: string, meta?: any): void {
    console.warn(\`[WARN] \${message}\`, meta ? JSON.stringify(meta) : '');
  },
  
  debug(message: string, meta?: any): void {
    console.debug(\`[DEBUG] \${message}\`, meta ? JSON.stringify(meta) : '');
  }
};`;

  if (!fs.existsSync(loggerPath)) {
    fs.writeFileSync(loggerPath, loggerContent, 'utf8');
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω logger.ts —Ñ–∞–π–ª');
  }
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
 */
function fixSpecificFiles(): void {
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º agents-service e2e-setup-real.ts
  const agentsSetupPath = 'services/agents-service/src/__tests__/e2e-setup-real.ts';
  if (fs.existsSync(agentsSetupPath)) {
    let content = fs.readFileSync(agentsSetupPath, 'utf8');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π prisma
    content = content.replace(/let prisma;/, 'let prisma: any;');
    content = content.replace(/prisma = new PrismaClient/, 'prisma = new PrismaClient');
    
    fs.writeFileSync(agentsSetupPath, content, 'utf8');
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω agents-service e2e-setup-real.ts');
  }

  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ecosystem-health.ts
  const ecosystemHealthPath = 'src/monitoring/ecosystem-health.ts';
  if (fs.existsSync(ecosystemHealthPath)) {
    let content = fs.readFileSync(ecosystemHealthPath, 'utf8');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç logger
    content = content.replace(/import { logger } from '\.\.\/config\/logger';/, "import { logger } from '../config/logger';");
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ healthData
    content = content.replace(/healthData\.(\w+)/g, '(healthData as any).$1');
    
    fs.writeFileSync(ecosystemHealthPath, content, 'utf8');
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω ecosystem-health.ts');
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
function main(): void {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏\n');
  
  // –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã
  createLoggerFile();
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
  fixSpecificFiles();
  
  // –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  const filesToFix = [
    'services/hubus-service/src/services/HubusService.ts',
    'services/hubus-service/src/services/LoginusClient.ts',
    'services/hubus-service/src/services/BilingusClient.ts',
    'services/hubus-service/src/services/AIProviderService.ts',
    'services/hubus-service/src/services/AIStreamingService.ts',
    'services/hubus-service/src/utils/Logger.ts',
    'services/hubus-service/src/controllers/HubusController.ts',
    'services/hubus-service/src/middleware/authMiddleware.ts',
    'services/hubus-service/src/middleware/errorHandler.ts',
    'services/hubus-service/src/types/HubusTypes.ts'
  ];
  
  console.log(`üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ${filesToFix.length} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...\n`);
  
  const results: FixResult[] = [];
  
  for (const filePath of filesToFix) {
    if (fs.existsSync(filePath)) {
      console.log(`üîÑ –ò—Å–ø—Ä–∞–≤–ª—è—é: ${path.relative(process.cwd(), filePath)}`);
      const result = fixTypeScriptFile(filePath);
      results.push(result);
      
      if (result.success) {
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω: ${result.fixes.join(', ')}`);
      } else {
        console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω: –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π`);
      }
    } else {
      console.log(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
    }
  }
  
  const successCount = results.filter(r => r.success).length;
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:`);
  console.log(`   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${successCount}`);
  console.log(`   ‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${results.length - successCount}`);
  
  if (successCount > 0) {
    console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø–∏–ª—è—Ü–∏—é: npx tsc --build');
    console.log('   2. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ—à–∏–±–∫–∏ –≤—Ä—É—á–Ω—É—é');
    console.log('   3. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã: npm test');
  }
  
  console.log('\nüéØ –¶–µ–ª—å: –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  main();
}

export {
  fixTypeScriptFile,
  createLoggerFile,
  fixSpecificFiles
}; 