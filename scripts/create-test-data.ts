import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function createTestData() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.upsert({
      where: { email: 'test@example.com' },
      update: {},
      create: {
        username: 'testuser',
        email: 'test@example.com',
        password: 'hashedpassword123',
        role: 'USER',
        status: 'ACTIVE',
        profile: JSON.stringify({
          name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          avatar: '',
          bio: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'
        })
      }
    });

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', user.username);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
    const project = await prisma.project.upsert({
      where: { slug: 'startapus-demo' },
      update: {},
      create: {
        name: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å - –î–µ–º–æ –ø—Ä–æ–µ–∫—Ç',
        description: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
        slug: 'startapus-demo',
        type: 'WEBSITE',
        status: 'PUBLISHED',
        domain: 'startapus-demo.situs.com',
        isPublished: true,
        primaryColor: '#3B82F6',
        secondaryColor: '#8B5CF6',
        fontFamily: 'Inter',
        settings: JSON.stringify({
          theme: 'auto',
          language: 'ru',
          creationType: 'manual'
        }),
        ownerId: user.id
      }
    });

    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω:', project.name);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
    const product = await prisma.product.upsert({
      where: { 
        projectId_name: {
          projectId: project.id,
          name: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å - –î–µ–º–æ –ø—Ä–æ–µ–∫—Ç'
        }
      },
      update: {},
      create: {
        name: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å - –î–µ–º–æ –ø—Ä–æ–µ–∫—Ç',
        description: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
        type: 'WEBSITE',
        status: 'PUBLISHED',
        url: 'https://startapus-demo.situs.com',
        editorUrl: '/redaktus?project=' + project.id + '&product=',
        settings: JSON.stringify({
          theme: 'auto',
          primaryColor: '#3B82F6',
          favicon: '/favicon.ico',
          logo: '/logo.svg',
          domain: 'startapus-demo.situs.com'
        }),
        projectId: project.id
      }
    });

    console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–Ω:', product.name);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const homePage = await prisma.page.upsert({
      where: { 
        projectId_slug: {
          projectId: project.id,
          slug: 'home'
        }
      },
      update: {},
      create: {
        title: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
        slug: 'home',
        content: JSON.stringify({
          blocks: [
            {
              id: 'hero-block-1',
              type: 'hero-block',
              props: {
                title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
                subtitle: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
                primaryButtonText: '–ù–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç',
                primaryButtonUrl: '/projects',
                secondaryButtonText: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
                secondaryButtonUrl: '/about',
                heroImage: 'https://via.placeholder.com/800x600/3B82F6/FFFFFF?text=–°—Ç–∞—Ä—Ç–∞–ø—É—Å'
              }
            },
            {
              id: 'features-block-1',
              type: 'features-block',
              props: {
                title: '–ù–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
                subtitle: '–í—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞–ø–∞',
                features: [
                  {
                    title: '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç',
                    description: '–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç',
                    icon: 'üöÄ'
                  },
                  {
                    title: '–ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞',
                    description: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤—Å–µ –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã',
                    icon: '‚öôÔ∏è'
                  },
                  {
                    title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
                    description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –º–µ—Ç—Ä–∏–∫–∏',
                    icon: 'üìä'
                  }
                ]
              }
            }
          ]
        }),
        pageType: 'PAGE',
        status: 'PUBLISHED',
        isHomePage: true,
        metaTitle: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
        metaDescription: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
        metaKeywords: '—Å—Ç–∞—Ä—Ç–∞–ø, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏, —Ä–∞–∑–≤–∏—Ç–∏–µ',
        projectId: project.id
      }
    });

    console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞:', homePage.title);

    const aboutPage = await prisma.page.upsert({
      where: { 
        projectId_slug: {
          projectId: project.id,
          slug: 'about'
        }
      },
      update: {},
      create: {
        title: '–û –Ω–∞—Å',
        slug: 'about',
        content: JSON.stringify({
          blocks: [
            {
              id: 'about-block-1',
              type: 'about-block',
              props: {
                title: '–û –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
                subtitle: '–ú—ã –ø–æ–º–æ–≥–∞–µ–º –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã',
                description: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å - —ç—Ç–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤. –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
                image: 'https://via.placeholder.com/600x400/8B5CF6/FFFFFF?text=–û –Ω–∞—Å'
              }
            }
          ]
        }),
        pageType: 'PAGE',
        status: 'PUBLISHED',
        isHomePage: false,
        metaTitle: '–û –Ω–∞—Å - –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
        metaDescription: '–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –°—Ç–∞—Ä—Ç–∞–ø—É—Å –∏ –Ω–∞—à–µ–π –º–∏—Å—Å–∏–∏',
        metaKeywords: '–æ –Ω–∞—Å, –º–∏—Å—Å–∏—è, –∫–æ–º–∞–Ω–¥–∞, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞',
        projectId: project.id
      }
    });

    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ "–û –Ω–∞—Å" —Å–æ–∑–¥–∞–Ω–∞:', aboutPage.title);

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('üìä –ü—Ä–æ–µ–∫—Ç ID:', project.id);
    console.log('üõçÔ∏è –ü—Ä–æ–¥—É–∫—Ç ID:', product.id);
    console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü—ã:', [homePage.id, aboutPage.id]);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestData();
