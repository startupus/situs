import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ "–°—Ç–∞—Ä—Ç–∞–ø—É—Å" —Å –±–∞–∑–æ–≤—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
 */

async function createStartapusProject() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ "–°—Ç–∞—Ä—Ç–∞–ø—É—Å"...');

    // –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ
    let user = await prisma.user.findFirst({
      where: { email: 'test@startapus.com' }
    });

    if (!user) {
      console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
      user = await prisma.user.create({
        data: {
          username: 'startapus_admin',
          email: 'test@startapus.com',
          password: 'hashed_password_here', // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–µ—à
          role: 'ADMIN',
          profile: {
            name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
            bio: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –°—Ç–∞—Ä—Ç–∞–ø—É—Å'
          }
        }
      });
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', user.email);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–µ–∫—Ç –°—Ç–∞—Ä—Ç–∞–ø—É—Å
    const existingProject = await prisma.project.findFirst({
      where: { 
        slug: 'startapus',
        ownerId: user.id 
      }
    });

    let project;
    if (existingProject) {
      console.log('üìÅ –ü—Ä–æ–µ–∫—Ç "–°—Ç–∞—Ä—Ç–∞–ø—É—Å" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      project = existingProject;
    } else {
      console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ "–°—Ç–∞—Ä—Ç–∞–ø—É—Å"...');
      project = await prisma.project.create({
        data: {
          name: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å',
          description: '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è –±–∏–∑–Ω–µ—Å–∞',
          slug: 'startapus',
          type: 'WEBSITE',
          domain: 'startapus.situs.com',
          status: 'DRAFT',
          ownerId: user.id,
          settings: {
            theme: 'auto',
            language: 'ru',
            creationType: 'manual'
          },
          primaryColor: '#4F46E5',
          secondaryColor: '#10B981',
          fontFamily: 'Inter'
        }
      });
      console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω:', project.name);
    }

    // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const pages = [
      {
        title: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
        slug: 'home',
        isHomePage: true,
        metaTitle: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
        metaDescription: '–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ä—Ç–∞–ø —Å –ø–æ–º–æ—â—å—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Ä–µ—Å—É—Ä—Å—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –±–∏–∑–Ω–µ—Å–∞.',
        content: {
          blocks: [
            {
              id: 'hero-1',
              type: 'hero-block',
              props: {
                title: '–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ä—Ç–∞–ø —Å –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
                subtitle: '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
                buttonText: '–ù–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å',
                image: '/images/hero-startup.jpg'
              }
            }
          ]
        }
      },
      {
        title: '–û –Ω–∞—Å',
        slug: 'about',
        metaTitle: '–û –∫–æ–º–ø–∞–Ω–∏–∏ –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ù–∞—à–∞ –º–∏—Å—Å–∏—è –∏ –∫–æ–º–∞–Ω–¥–∞',
        metaDescription: '–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –∫–æ–º–∞–Ω–¥–µ –°—Ç–∞—Ä—Ç–∞–ø—É—Å, –Ω–∞—à–µ–π –º–∏—Å—Å–∏–∏ –∏ –ø–æ–¥—Ö–æ–¥–µ –∫ —Ä–∞–∑–≤–∏—Ç–∏—é —Å—Ç–∞—Ä—Ç–∞–ø-—ç–∫–æ—Å–∏—Å—Ç–µ–º—ã.',
        content: {
          blocks: [
            {
              id: 'about-1',
              type: 'text-block',
              props: {
                title: '–û –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
                content: '–ú—ã –ø–æ–º–æ–≥–∞–µ–º –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è–º –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –∏–¥–µ–∏ –≤ —É—Å–ø–µ—à–Ω—ã–µ –±–∏–∑–Ω–µ—Å—ã. –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∑–Ω–∞–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞ —Ä–∞–∑–≤–∏—Ç–∏—è —Å—Ç–∞—Ä—Ç–∞–ø–∞.'
              }
            }
          ]
        }
      },
      {
        title: '–£—Å–ª—É–≥–∏',
        slug: 'services',
        metaTitle: '–£—Å–ª—É–≥–∏ –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤',
        metaDescription: '–ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤: –æ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –¥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.',
        content: {
          blocks: [
            {
              id: 'services-1',
              type: 'services-block',
              props: {
                title: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏',
                services: [
                  {
                    title: '–ë–∏–∑–Ω–µ—Å-–∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥',
                    description: '–ü–æ–º–æ—â—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏',
                    icon: 'chart'
                  },
                  {
                    title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                    description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ MVP –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
                    icon: 'code'
                  },
                  {
                    title: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
                    description: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤',
                    icon: 'megaphone'
                  }
                ]
              }
            }
          ]
        }
      },
      {
        title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
        slug: 'contacts',
        metaTitle: '–ö–æ–Ω—Ç–∞–∫—Ç—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏',
        metaDescription: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–æ–º–∞–Ω–¥–æ–π –°—Ç–∞—Ä—Ç–∞–ø—É—Å –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞. –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Ñ–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.',
        content: {
          blocks: [
            {
              id: 'contacts-1',
              type: 'contact-block',
              props: {
                title: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏',
                email: 'hello@startapus.com',
                phone: '+7 (495) 123-45-67',
                address: '–ú–æ—Å–∫–≤–∞, —É–ª. –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è, 1'
              }
            }
          ]
        }
      },
      {
        title: '–ü—Ä–∞–π—Å–∏–Ω–≥',
        slug: 'pricing',
        metaTitle: '–¢–∞—Ä–∏—Ñ—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω',
        metaDescription: '–ì–∏–±–∫–∏–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
        content: {
          blocks: [
            {
              id: 'pricing-1',
              type: 'pricing-block',
              props: {
                title: '–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–ª–∞–Ω',
                plans: [
                  {
                    name: '–°—Ç–∞—Ä—Ç–µ—Ä',
                    price: '9900',
                    period: '–º–µ—Å—è—Ü',
                    features: ['–ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', '–î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º', 'Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞']
                  },
                  {
                    name: '–ü—Ä–æ—Ñ–∏',
                    price: '29900',
                    period: '–º–µ—Å—è—Ü',
                    features: ['–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã']
                  },
                  {
                    name: '–≠–Ω—Ç–µ—Ä–ø—Ä–∞–π–∑',
                    price: '–ü–æ –∑–∞–ø—Ä–æ—Å—É',
                    period: '',
                    features: ['–ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥', '–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è']
                  }
                ]
              }
            }
          ]
        }
      }
    ];

    console.log('üìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü...');
    
    for (const pageData of pages) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      const existingPage = await prisma.page.findFirst({
        where: {
          slug: pageData.slug,
          projectId: project.id
        }
      });

      if (existingPage) {
        console.log(`üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ "${pageData.title}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        continue;
      }

      const page = await prisma.page.create({
        data: {
          title: pageData.title,
          slug: pageData.slug,
          content: pageData.content,
          projectId: project.id,
          isHomePage: pageData.isHomePage || false,
          metaTitle: pageData.metaTitle,
          metaDescription: pageData.metaDescription,
          status: 'DRAFT'
        }
      });

      console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞: ${page.title} (/${page.slug})`);
    }

    console.log('\nüéâ –ü—Ä–æ–µ–∫—Ç "–°—Ç–∞—Ä—Ç–∞–ø—É—Å" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
    console.log(`üì± ID –ø—Ä–æ–µ–∫—Ç–∞: ${project.id}`);
    console.log(`üë§ –í–ª–∞–¥–µ–ª–µ—Ü: ${user.email}`);
    console.log(`üåê –î–æ–º–µ–Ω: ${project.domain}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = await prisma.page.groupBy({
      by: ['status'],
      where: { projectId: project.id },
      _count: { status: true }
    });

    const totalPages = await prisma.page.count({
      where: { projectId: project.id }
    });

    console.log(`üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${totalPages}`);
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`, stats);

    return {
      project,
      user,
      totalPages
    };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createStartapusProject()
  .then((result) => {
    console.log('\n‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
    process.exit(1);
  });
