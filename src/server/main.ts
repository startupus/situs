import 'reflect-metadata';
import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { AppModule } from './app.module';
import { GlobalExceptionFilter } from './common/filters/global-exception.filter';
import { LoggingInterceptor } from './common/interceptors/logging.interceptor';

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –Ω–∞ —ç—Ç–∞–ø–µ –∑–∞–ø—É—Å–∫–∞
process.on('uncaughtException', (err) => {
  try { console.error('[FATAL] uncaughtException:', err); } catch {}
});
process.on('unhandledRejection', (reason) => {
  try { console.error('[FATAL] unhandledRejection:', reason); } catch {}
});

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π –ø—Ä–æ—Ü–µ—Å—Å–∞
process.on('beforeExit', (code) => {
  try { console.warn('[LIFECYCLE] beforeExit code:', code); } catch {}
});
process.on('exit', (code) => {
  try { console.warn('[LIFECYCLE] exit code:', code); } catch {}
});

/**
 * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ NestJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * 
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç:
 * - –í–∞–ª–∏–¥–∞—Ü–∏—é
 * - CORS
 * - Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
 * - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä—ã
 */
async function bootstrap() {
  console.log('[BOOT] Creating Nest application...');
  // Dev keep-alive, —á—Ç–æ–±—ã –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è –¥–æ —Å—Ç–∞—Ä—Ç–∞ HTTP-—Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ tsx/ESM
  const isProduction = process.env.NODE_ENV === 'production';
  const devKeepAlive = isProduction ? undefined : setInterval(() => {}, 1000);

  const app = await NestFactory.create(AppModule);
  console.log('[BOOT] Nest application created');

  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞

  // CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ
  app.enableCors();
  console.log('[BOOT] CORS enabled');

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–∞–π–ø—ã/—Ñ–∏–ª—å—Ç—Ä—ã/–∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä—ã
  app.useGlobalPipes(new ValidationPipe({ whitelist: true, transform: true }));
  app.useGlobalFilters(new GlobalExceptionFilter());
  app.useGlobalInterceptors(new LoggingInterceptor());
  console.log('[BOOT] Global pipes/filters/interceptors configured');

  // –ì—Ä–µ–π—Å—Ñ—É–ª-—à–∞—Ç–¥–∞—É–Ω
  app.enableShutdownHooks();

  // –ë–∞–∑–æ–≤—ã–µ Express routes
  try {
    const httpAdapter: any = app.getHttpAdapter();
    const instance: any = httpAdapter.getInstance?.();
    instance?.get?.('/', (_req: any, res: any) => res.json({ ok: true, service: 'situs-api' }));
    instance?.get?.('/health', (_req: any, res: any) => res.json({ status: 'ok', ts: new Date().toISOString() }));
    console.log('[BOOT] Early routes registered');
  } catch (e) {
    console.warn('[BOOT] Failed to register early routes:', (e as any)?.message || e);
  }

  // Swagger –æ—Ç–∫–ª—é—á—ë–Ω

  // –£–¥–∞–ª–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ Express-—Ä—É—á–∫–∏ /api/projects ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º ProjectsController

  const port = Number(process.env.PORT || 3002);
  try { console.log(`[BOOT] About to listen on port ${port}`); } catch {}
  await app.listen(port);
  console.log(`[BOOT] Listening OK on http://localhost:${port}`);
  console.log('üöÄ Situs NestJS Server –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç', port);
  console.log(`üîó API –±–∞–∑–æ–≤—ã–π URL: http://localhost:${port}/api`);
  console.log(`üíö Health: http://localhost:${port}/health`);
  try { console.log(`[BOOT] Listening on http://localhost:${port}`); } catch {}

  console.log('üöÄ Situs NestJS Server –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üîó API –±–∞–∑–æ–≤—ã–π URL: http://localhost:${port}/api`);
  console.log(`üíö Health: http://localhost:${port}/health`);
  // –û—á–∏—â–∞–µ–º dev keep-alive –ø–æ —É—Å–ø–µ—à–Ω–æ–º—É —Å—Ç–∞—Ä—Ç—É
  if (devKeepAlive) clearInterval(devKeepAlive);

  // SSE —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ RealtimeController (@Sse('projects/events'))

  // –î—É–±–ª–∏—Ä—É—é—â–∏–µ endpoints —É–¥–∞–ª–µ–Ω—ã - –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –Ω–∞—á–∞–ª–æ main.ts –ø–µ—Ä–µ–¥ app.listen()
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
function setupSignalHandlers() {
  const shutdown = async (signal: string) => {
    try { console.log(`[SHUTDOWN] Received ${signal}`); } catch {}
    try {
      // –í Nest 11 —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫—Ä—ã–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ app.close(), –Ω–æ —É –Ω–∞—Å –Ω–µ—Ç app –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏.
      // –ü–æ—ç—Ç–æ–º—É –ø–æ–ª–∞–≥–∞–µ–º—Å—è –Ω–∞ enableShutdownHooks + OnModuleDestroy —É PrismaService.
    } catch {}
    process.exit(0);
  };
  process.on('SIGINT', () => shutdown('SIGINT'));
  process.on('SIGTERM', () => shutdown('SIGTERM'));
}

setupSignalHandlers();

bootstrap().catch((error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  process.exit(1);
});
