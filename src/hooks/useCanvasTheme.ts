import { useState, useEffect, useCallback } from 'react';

export type CanvasTheme = 'light' | 'dark' | 'system';

export const useCanvasTheme = () => {
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É –¥–ª—è –∫–∞–Ω–≤–∞—Å–∞
  const [theme, setTheme] = useState<CanvasTheme>('light');
  const [resolvedTheme, setResolvedTheme] = useState<'light' | 'dark'>('light');

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é —Ç–µ–º—É
  const getSystemTheme = useCallback((): 'light' | 'dark' => {
    const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    console.log('üé® Canvas Theme: System theme detected:', isDark ? 'dark' : 'light');
    return isDark ? 'dark' : 'light';
  }, []);

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –∫–∞–Ω–≤–∞—Å–∞ —Å –ü–û–õ–ù–û–ô –∏–∑–æ–ª—è—Ü–∏–µ–π –æ—Ç —Ç–µ–º—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  const applyTheme = useCallback((newTheme: 'light' | 'dark') => {
    console.log('üé® Canvas Theme: Applying isolated theme:', newTheme);
    const canvasContainer = document.querySelector('.redaktus-canvas') as HTMLElement;
    
    if (canvasContainer) {
      // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π –∏ –∫–ª–∞—Å—Å–æ–≤
      canvasContainer.removeAttribute('style');
      canvasContainer.classList.remove('dark', 'light', 'canvas-interface-dark', 'canvas-interface-light', 'canvas-light', 'canvas-dark');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏
      canvasContainer.setAttribute('data-canvas-theme', newTheme);
      canvasContainer.setAttribute('data-canvas-isolated', 'true');
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∫–∞–Ω–≤–∞—Å–∞
      canvasContainer.classList.add(`canvas-${newTheme}`);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å dark –¥–ª—è Tailwind dark —Ä–µ–∂–∏–º–∞
      if (newTheme === 'dark') {
        canvasContainer.classList.add('dark');
      }
      
      // –°–æ–∑–¥–∞–µ–º –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–∞–Ω–≤–∞—Å–∞
      const canvasStyles = {
        // –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –∫–∞–Ω–≤–∞—Å–∞
        '--canvas-bg': newTheme === 'dark' ? '#111827' : '#ffffff',
        '--canvas-text': newTheme === 'dark' ? '#f9fafb' : '#1f2937',
        '--canvas-border': newTheme === 'dark' ? '#374151' : '#e5e7eb',
        '--canvas-surface': newTheme === 'dark' ? '#1f2937' : '#f9fafb',
        
        // UI —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞–Ω–≤–∞—Å–∞
        '--canvas-ui-bg': newTheme === 'dark' ? '#1f2937' : '#f9fafb',
        '--canvas-ui-text': newTheme === 'dark' ? '#f9fafb' : '#1f2937',
        '--canvas-ui-border': newTheme === 'dark' ? '#374151' : '#e5e7eb',
        
        // –ö–æ–Ω—Ç–µ–Ω—Ç —Å–∞–π—Ç–∞
        '--canvas-content-bg': newTheme === 'dark' ? '#111827' : '#ffffff',
        '--canvas-content-text': newTheme === 'dark' ? '#f9fafb' : '#1f2937',
        '--canvas-content-surface': newTheme === 'dark' ? '#1f2937' : '#f9fafb',
        
        // –ò–∑–æ–ª—è—Ü–∏—è –æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        '--interface-theme-inheritance': 'none',
        '--tw-bg-opacity': '1',
        '--tw-text-opacity': '1',
        '--tw-border-opacity': '1',
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ–º–∞
        'color-scheme': newTheme,
        'background-color': newTheme === 'dark' ? '#111827' : '#ffffff',
        'color': newTheme === 'dark' ? '#f9fafb' : '#1f2937'
      };
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ —Å—Ç–∏–ª–∏
      Object.entries(canvasStyles).forEach(([property, value]) => {
        canvasContainer.style.setProperty(property, value);
      });
      
      console.log('üé® Canvas Theme: Fully isolated theme applied:', newTheme);
    } else {
      console.warn('üé® Canvas Theme: Canvas container not found!');
    }
  }, []);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    console.log('üé® Canvas Theme: useEffect initialization');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∫–∞–Ω–≤–∞—Å–∞
    const savedTheme = localStorage.getItem('canvas-theme') as CanvasTheme;
    console.log('üé® Canvas Theme: Saved theme from localStorage:', savedTheme);
    
    if (savedTheme && ['light', 'dark', 'system'].includes(savedTheme)) {
      console.log('üé® Canvas Theme: Setting theme to:', savedTheme);
      setTheme(savedTheme);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º resolved —Ç–µ–º—É
      let resolved: 'light' | 'dark';
      if (savedTheme === 'system') {
        resolved = getSystemTheme();
      } else {
        resolved = savedTheme;
      }
      setResolvedTheme(resolved);
      applyTheme(resolved);
    } else {
      // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –í–°–ï–ì–î–ê –Ω–∞—á–∏–Ω–∞–µ–º —Å–æ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã –∫–∞–Ω–≤–∞—Å–∞
      // —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
      console.log('üé® Canvas Theme: First time - starting with light theme');
      setTheme('light');
      setResolvedTheme('light');
      applyTheme('light');
    }
  }, [getSystemTheme, applyTheme]);

  // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
  useEffect(() => {
    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
    const handleChange = () => {
      console.log('üé® Canvas Theme: System theme changed');
      if (theme === 'system') {
        const systemTheme = getSystemTheme();
        setResolvedTheme(systemTheme);
        applyTheme(systemTheme);
      }
    };
    
    mediaQuery.addEventListener('change', handleChange);
    
    return () => {
      mediaQuery.removeEventListener('change', handleChange);
    };
  }, [theme, getSystemTheme, applyTheme]);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–º—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ theme (–ù–ï –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏!)
  useEffect(() => {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
    console.log('üé® Canvas Theme: Theme effect triggered for:', theme);
    
    let newResolvedTheme: 'light' | 'dark';
    
    if (theme === 'system') {
      newResolvedTheme = getSystemTheme();
    } else {
      newResolvedTheme = theme;
    }
    
    console.log('üé® Canvas Theme: Updating resolved theme to:', newResolvedTheme);
    
    setResolvedTheme(newResolvedTheme);
    applyTheme(newResolvedTheme);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É –∫–∞–Ω–≤–∞—Å–∞ –≤ localStorage
    localStorage.setItem('canvas-theme', theme);
  }, [theme, getSystemTheme, applyTheme]);

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã –∫–∞–Ω–≤–∞—Å–∞ (—Ç–æ–ª—å–∫–æ light ‚Üî dark)
  const toggleTheme = useCallback(() => {
    console.log('üé® Canvas Theme: toggleTheme called! Current theme:', theme);
    
    // –ü—Ä–æ—Å—Ç–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É light –∏ dark (–±–µ–∑ system)
    const newTheme: CanvasTheme = resolvedTheme === 'light' ? 'dark' : 'light';
    
    console.log('üé® Canvas Theme: Theme toggle:', resolvedTheme, '->', newTheme);
    setTheme(newTheme);
  }, [theme, resolvedTheme]);

  return {
    theme,
    resolvedTheme,
    toggleTheme,
    setTheme
  };
}; 