import React, { useState, useEffect } from 'react';
import { MenuItemData } from '../../../types/menu';
import { useMenuSystemRealtime } from '../../../hooks/useMenuSystemRealtime';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–Ω—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –º–µ–Ω—é –≤—ã–≥–ª—è–¥–∏—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
interface MenuPreviewProps {
  projectId: string;
  selectedMenuType: string;
  menuItems: MenuItemData[];  // –ü–æ–ª—É—á–∞–µ–º –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è
}

const MenuPreview: React.FC<MenuPreviewProps> = ({
  projectId,
  selectedMenuType,
  menuItems
}) => {
  const [previewStyle, setPreviewStyle] = useState<'horizontal' | 'vertical' | 'mobile'>('horizontal');
  const [userRole, setUserRole] = useState<'guest' | 'user' | 'admin'>('guest');
  const [language, setLanguage] = useState<string>('*');

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é –ø–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞
  const getFilteredItems = (): MenuItemData[] => {
    const accessLevels = {
      guest: ['PUBLIC'],
      user: ['PUBLIC', 'REGISTERED'],
      admin: ['PUBLIC', 'REGISTERED', 'SPECIAL', 'CUSTOM']
    };

    return menuItems.filter(item => {
      // –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞
      if (!accessLevels[userRole].includes(item.accessLevel)) {
        return false;
      }

      // –§–∏–ª—å—Ç—Ä –ø–æ —è–∑—ã–∫—É
      if (language !== '*' && item.language !== '*' && item.language !== language) {
        return false;
      }

      return item.isPublished;
    });
  };

  const filteredItems = getFilteredItems();

  // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –º–µ–Ω—é
  const buildMenuTree = (items: MenuItemData[]): MenuItemData[] => {
    const itemsMap = new Map<string, MenuItemData>();
    const rootItems: MenuItemData[] = [];

    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É –≤—Å–µ—Ö –ø—É–Ω–∫—Ç–æ–≤
    items.forEach(item => {
      itemsMap.set(item.id, { ...item, children: [] });
    });

    // –°—Ç—Ä–æ–∏–º –¥–µ—Ä–µ–≤–æ
    items.forEach(item => {
      const itemWithChildren = itemsMap.get(item.id)!;
      
      if (item.parentId) {
        const parent = itemsMap.get(item.parentId);
        if (parent) {
          parent.children = parent.children || [];
          parent.children.push(itemWithChildren);
        }
      } else {
        rootItems.push(itemWithChildren);
      }
    });

    return rootItems.sort((a, b) => a.orderIndex - b.orderIndex);
  };

  const menuTree = buildMenuTree(filteredItems);

  // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  const renderPreviewItem = (item: MenuItemData, depth = 0): React.ReactNode => {
    if (item.type === 'SEPARATOR') {
      return <div key={item.id} className="border-t border-gray-200 dark:border-gray-700 my-2" />;
    }

    if (item.type === 'HEADING') {
      return (
        <div key={item.id} className="font-semibold text-gray-600 dark:text-gray-400 text-sm uppercase tracking-wider py-2">
          {item.title}
        </div>
      );
    }

    const hasChildren = item.children && item.children.length > 0;
    const indentStyle = previewStyle === 'vertical' ? { paddingLeft: `${depth * 16}px` } : {};

    return (
      <div key={item.id}>
        <div 
          className={`
            flex items-center gap-2 px-3 py-2 rounded-lg transition-colors cursor-pointer
            ${previewStyle === 'horizontal' ? 'hover:bg-primary/10' : 'hover:bg-gray-100 dark:hover:bg-gray-800'}
            ${depth > 0 ? 'text-sm' : ''}
          `}
          style={indentStyle}
        >
          {/* –ò–∫–æ–Ω–∫–∞ */}
          {item.component && (
            <span className="text-xs">
              {item.component === 'Website' ? 'üåê' :
               item.component === 'Store' ? 'üõí' :
               item.component === 'Blog' ? 'üìù' :
               item.component === 'Landing' ? 'üéØ' : 'üß©'}
            </span>
          )}
          
          {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
          <span className="text-dark dark:text-white">
            {item.title}
          </span>

          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */}
          {hasChildren && (
            <span className="text-xs text-gray-500">‚ñº</span>
          )}
        </div>

        {/* –î–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        {hasChildren && previewStyle === 'vertical' && (
          <div className="ml-4">
            {item.children!.map(child => renderPreviewItem(child, depth + 1))}
          </div>
        )}
      </div>
    );
  };

  return (
    <div className="bg-white dark:bg-dark-2 rounded-lg border border-stroke dark:border-dark-3">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="p-4 border-b border-stroke dark:border-dark-3">
        <h3 className="text-lg font-semibold text-dark dark:text-white mb-2">
          üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –º–µ–Ω—é
        </h3>
        <p className="text-sm text-body-color dark:text-dark-6">
          –ö–∞–∫ –º–µ–Ω—é –≤—ã–≥–ª—è–¥–∏—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
        </p>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
      <div className="p-4 border-b border-stroke dark:border-dark-3">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {/* –°—Ç–∏–ª—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
          <div>
            <label className="block text-sm font-medium text-dark dark:text-white mb-2">
              –°—Ç–∏–ª—å
            </label>
            <select
              value={previewStyle}
              onChange={(e) => setPreviewStyle(e.target.value as any)}
              className="w-full px-3 py-2 border border-stroke dark:border-dark-3 rounded-lg bg-white dark:bg-dark-2 text-dark dark:text-white"
            >
              <option value="horizontal">üì± –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ</option>
              <option value="vertical">üìã –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ</option>
              <option value="mobile">üì± –ú–æ–±–∏–ª—å–Ω–æ–µ</option>
            </select>
          </div>

          {/* –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <div>
            <label className="block text-sm font-medium text-dark dark:text-white mb-2">
              –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            </label>
            <select
              value={userRole}
              onChange={(e) => setUserRole(e.target.value as any)}
              className="w-full px-3 py-2 border border-stroke dark:border-dark-3 rounded-lg bg-white dark:bg-dark-2 text-dark dark:text-white"
            >
              <option value="guest">üë§ –ì–æ—Å—Ç—å (PUBLIC)</option>
              <option value="user">üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (REGISTERED)</option>
              <option value="admin">‚≠ê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (ALL)</option>
            </select>
          </div>

          {/* –Ø–∑—ã–∫ */}
          <div>
            <label className="block text-sm font-medium text-dark dark:text-white mb-2">
              –Ø–∑—ã–∫
            </label>
            <select
              value={language}
              onChange={(e) => setLanguage(e.target.value)}
              className="w-full px-3 py-2 border border-stroke dark:border-dark-3 rounded-lg bg-white dark:bg-dark-2 text-dark dark:text-white"
            >
              <option value="*">üåç –í—Å–µ —è–∑—ã–∫–∏</option>
              <option value="ru-RU">üá∑üá∫ –†—É—Å—Å–∫–∏–π</option>
              <option value="en-GB">üá¨üáß English</option>
              <option value="es-ES">üá™üá∏ Espa√±ol</option>
            </select>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */}
        <div className="mt-3 text-sm text-body-color dark:text-dark-6">
          –ü–æ–∫–∞–∑–∞–Ω–æ: <strong>{filteredItems.length}</strong> –∏–∑ {menuItems.length} –ø—É–Ω–∫—Ç–æ–≤
          {userRole !== 'admin' && menuItems.length > filteredItems.length && (
            <span className="text-orange-600 dark:text-orange-400 ml-2">
              (—Å–∫—Ä—ã—Ç–æ {menuItems.length - filteredItems.length} –ø–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞)
            </span>
          )}
        </div>
      </div>

      {/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä */}
      <div className="p-4">
        {filteredItems.length === 0 ? (
          <div className="text-center py-8">
            <div className="text-4xl mb-4">üëÅÔ∏è</div>
            <h3 className="text-lg font-medium text-dark dark:text-white mb-2">
              –ú–µ–Ω—é —Å–∫—Ä—ã—Ç–æ
            </h3>
            <p className="text-body-color dark:text-dark-6">
              –î–ª—è —Ä–æ–ª–∏ "{userRole}" –∏ —è–∑—ã–∫–∞ "{language}" –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
            </p>
          </div>
        ) : (
          <div className={`
            ${previewStyle === 'horizontal' ? 'flex flex-wrap gap-4' : 'space-y-1'}
            ${previewStyle === 'mobile' ? 'space-y-2' : ''}
          `}>
            {menuTree.map(item => renderPreviewItem(item))}
          </div>
        )}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ */}
      <div className="p-4 bg-gray-50 dark:bg-gray-800 border-t border-stroke dark:border-dark-3">
        <div className="flex items-start gap-3">
          <div className="text-blue-600 dark:text-blue-400 text-lg">üí°</div>
          <div className="text-sm text-body-color dark:text-dark-6">
            <p className="font-medium mb-1">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏</p>
            <p>–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–µ–Ω—é –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –∑–¥–µ—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–∞–∫ –º–µ–Ω—é –≤—ã–≥–ª—è–¥–∏—Ç –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MenuPreview;
