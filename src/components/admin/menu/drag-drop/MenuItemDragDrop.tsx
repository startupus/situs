import React from 'react';
import { MenuItemDragDropProps } from './types';
import { useDragDrop } from './useDragDrop';
import { buildMenuHierarchy, validateMenuHierarchy } from './utils';
import MenuItemRow from './MenuItemRow';

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è Drag & Drop –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –ø–æ—Ä—è–¥–æ–∫ –∏ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å –ø—É–Ω–∫—Ç–æ–≤
 */
const MenuItemDragDrop: React.FC<MenuItemDragDropProps> = ({
  items,
  onReorder,
  onEditItem,
  onDeleteItem,
  onToggleStatus,
  showSelection = false,
  selectedItems = [],
  onSelectItem
}) => {
  const {
    dragState,
    handleDragStart,
    handleDragEnd,
    handleDragOver,
    handleDragLeave,
    handleDrop
  } = useDragDrop(items, onReorder);

  if (items.length === 0) {
    return (
      <div className="text-center py-8">
        <div className="text-4xl mb-4">üìã</div>
        <h3 className="text-lg font-medium text-dark dark:text-white mb-2">
          –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        </h3>
        <p className="text-body-color dark:text-dark-6">
          –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
        </p>
      </div>
    );
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°—Ç—Ä–æ–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∏–µ—Ä–∞—Ä—Ö–∏—é –∏–∑ –ø–ª–æ—Å–∫–æ–≥–æ —Å–ø–∏—Å–∫–∞
  const hierarchicalItems = buildMenuHierarchy(items);
  
  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é –∏ –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å (–æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ø–∞–º–∞)
  // const validation = validateMenuHierarchy(items);
  // if (!validation.isValid) {
  //   console.warn('Menu hierarchy validation errors:', validation.errors);
  // }

  return (
    <div className="space-y-2">
      {/* –°–ø–∏—Å–æ–∫ –ø—É–Ω–∫—Ç–æ–≤ —Å Drag & Drop */}
      <div className="bg-white dark:bg-dark-2 rounded-lg border border-stroke dark:border-dark-3">
        <div className="p-4 space-y-2">
          {hierarchicalItems.map(item => (
            <MenuItemRow
              key={item.id}
              item={item}
              depth={0}
              maxDepth={3}
              isDragging={dragState.draggedItem?.id === item.id}
              dragState={dragState}
              onDragStart={handleDragStart}
              onDragEnd={handleDragEnd}
              onDragOver={handleDragOver}
              onDragLeave={handleDragLeave}
              onDrop={handleDrop}
              onEditItem={onEditItem}
              onDeleteItem={onDeleteItem}
              onToggleStatus={onToggleStatus}
              showSelection={showSelection}
              selectedItems={selectedItems}
              onSelectItem={onSelectItem}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default MenuItemDragDrop;
