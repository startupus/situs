import React, { useState } from "react";

interface MarketingProject {
  id: string;
  name: string;
  type: "website" | "store" | "chatbot";
  conversionRate: number;
  monthlyVisitors: number;
  revenue: number;
  roi: number;
}

interface MarketingTool {
  id: string;
  name: string;
  category: "seo" | "advertising" | "email" | "social" | "analytics" | "partnerships";
  description: string;
  icon: string;
  status: "active" | "inactive" | "pending";
  performance: number;
}

interface PartnerProgram {
  id: string;
  name: string;
  type: "affiliate" | "referral" | "integration";
  commission: number;
  activePartners: number;
  monthlyEarnings: number;
  status: "active" | "paused";
}

const SitusMarketing: React.FC = () => {
  const [selectedProject, setSelectedProject] = useState<string>("all");
  const [selectedCategory, setSelectedCategory] = useState<string>("all");

  // Mock data –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
  const marketingProjects: MarketingProject[] = [
    {
      id: "1",
      name: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç",
      type: "website",
      conversionRate: 3.2,
      monthlyVisitors: 15420,
      revenue: 245000,
      roi: 380
    },
    {
      id: "2", 
      name: "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω",
      type: "store",
      conversionRate: 2.8,
      monthlyVisitors: 8650,
      revenue: 156000,
      roi: 420
    },
    {
      id: "3",
      name: "–ß–∞—Ç-–±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
      type: "chatbot",
      conversionRate: 1.9,
      monthlyVisitors: 3200,
      revenue: 45000,
      roi: 280
    }
  ];

  // Mock data –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  const marketingTools: MarketingTool[] = [
    {
      id: "1",
      name: "Google Ads",
      category: "advertising",
      description: "–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ –≤ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö",
      icon: "üéØ",
      status: "active",
      performance: 92
    },
    {
      id: "2",
      name: "SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
      category: "seo", 
      description: "–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π –≤—ã–¥–∞—á–µ",
      icon: "üîç",
      status: "active",
      performance: 85
    },
    {
      id: "3",
      name: "Email —Ä–∞—Å—Å—ã–ª–∫–∏",
      category: "email",
      description: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥",
      icon: "üìß",
      status: "active",
      performance: 78
    },
    {
      id: "4",
      name: "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
      category: "social",
      description: "SMM –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö",
      icon: "üì±",
      status: "pending",
      performance: 65
    },
    {
      id: "5",
      name: "–Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞",
      category: "analytics",
      description: "–ì–ª—É–±–æ–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      icon: "üìä",
      status: "active",
      performance: 95
    }
  ];

  // Mock data –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º
  const partnerPrograms: PartnerProgram[] = [
    {
      id: "1",
      name: "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
      type: "referral",
      commission: 15,
      activePartners: 24,
      monthlyEarnings: 48500,
      status: "active"
    },
    {
      id: "2",
      name: "–ê—Ñ–∏–ª–∏–∞—Ç—Å–∫–∞—è —Å–µ—Ç—å",
      type: "affiliate", 
      commission: 8,
      activePartners: 156,
      monthlyEarnings: 127300,
      status: "active"
    },
    {
      id: "3",
      name: "API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      type: "integration",
      commission: 25,
      activePartners: 12,
      monthlyEarnings: 89400,
      status: "paused"
    }
  ];

  const getProjectTypeIcon = (type: string) => {
    switch (type) {
      case "website": return "üåê";
      case "store": return "üõí";
      case "chatbot": return "ü§ñ";
      default: return "üìÑ";
    }
  };

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case "seo": return "üîç";
      case "advertising": return "üéØ";
      case "email": return "üìß";
      case "social": return "üì±";
      case "analytics": return "üìä";
      case "partnerships": return "ü§ù";
      default: return "‚öôÔ∏è";
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case "active": return "bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100";
      case "pending": return "bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100";
      case "inactive": return "bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100";
      case "paused": return "bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-100";
      default: return "bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-100";
    }
  };

  const filteredTools = marketingTools.filter(tool => 
    selectedCategory === "all" || tool.category === selectedCategory
  );

  const totalRevenue = marketingProjects.reduce((sum, project) => sum + project.revenue, 0);
  const averageROI = marketingProjects.reduce((sum, project) => sum + project.roi, 0) / marketingProjects.length;
  const totalVisitors = marketingProjects.reduce((sum, project) => sum + project.monthlyVisitors, 0);
  const totalPartnerEarnings = partnerPrograms.reduce((sum, program) => sum + program.monthlyEarnings, 0);

  return (
    <div className="flex min-h-screen">
      {/* –ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ */}
      <div className="w-80 border-r border-stroke bg-white p-6 dark:border-dark-3 dark:bg-dark-2">
        <div className="mb-6">
          <h1 className="text-2xl font-semibold text-dark dark:text-white">
            –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥
          </h1>
          <p className="text-body-color dark:text-dark-6 mt-2">
            –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
          </p>
        </div>

        {/* –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º */}
        <div className="mb-6">
          <h3 className="mb-3 text-lg font-medium text-dark dark:text-white">
            –ü—Ä–æ–µ–∫—Ç—ã
          </h3>
          <div className="space-y-2">
            <button
              onClick={() => setSelectedProject("all")}
              className={`w-full rounded-lg p-3 text-left transition-colors ${
                selectedProject === "all"
                  ? "bg-primary text-white"
                  : "hover:bg-gray-50 dark:hover:bg-dark-3"
              }`}
            >
              üìä –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
            </button>
            {marketingProjects.map((project) => (
              <button
                key={project.id}
                onClick={() => setSelectedProject(project.id)}
                className={`w-full rounded-lg p-3 text-left transition-colors ${
                  selectedProject === project.id
                    ? "bg-primary text-white"
                    : "hover:bg-gray-50 dark:hover:bg-dark-3"
                }`}
              >
                <div className="flex items-center">
                  <span className="mr-2">{getProjectTypeIcon(project.type)}</span>
                  <div>
                    <div className="font-medium">{project.name}</div>
                    <div className="text-sm opacity-70">
                      ROI: {project.roi}%
                    </div>
                  </div>
                </div>
              </button>
            ))}
          </div>
        </div>

        {/* –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
        <div className="mb-6">
          <h3 className="mb-3 text-lg font-medium text-dark dark:text-white">
            –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
          </h3>
          <div className="space-y-2">
            {["all", "seo", "advertising", "email", "social", "analytics", "partnerships"].map((category) => (
              <button
                key={category}
                onClick={() => setSelectedCategory(category)}
                className={`w-full rounded-lg p-2 text-left transition-colors ${
                  selectedCategory === category
                    ? "bg-primary text-white"
                    : "hover:bg-gray-50 dark:hover:bg-dark-3"
                }`}
              >
                <div className="flex items-center">
                  <span className="mr-2">{getCategoryIcon(category)}</span>
                  {category === "all" ? "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" : 
                   category === "seo" ? "SEO" :
                   category === "advertising" ? "–†–µ–∫–ª–∞–º–∞" :
                   category === "email" ? "Email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥" :
                   category === "social" ? "–°–æ—Ü—Å–µ—Ç–∏" :
                   category === "analytics" ? "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" :
                   category === "partnerships" ? "–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ" : category}
                </div>
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å */}
      <div className="flex-1 p-6">
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
        <div className="mb-8 grid grid-cols-1 gap-6 md:grid-cols-2 xl:grid-cols-4">
          <div className="rounded-lg bg-white p-6 shadow-1 dark:bg-dark-2 dark:shadow-box-dark">
            <div className="flex items-center">
              <div className="mr-4 flex h-12 w-12 items-center justify-center rounded-full bg-blue-100 dark:bg-blue-800">
                <span className="text-xl">üí∞</span>
              </div>
              <div>
                <h3 className="text-xl font-semibold text-dark dark:text-white">
                  {new Intl.NumberFormat('ru-RU').format(totalRevenue)} ‚ÇΩ
                </h3>
                <p className="text-body-color dark:text-dark-6">–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</p>
              </div>
            </div>
          </div>

          <div className="rounded-lg bg-white p-6 shadow-1 dark:bg-dark-2 dark:shadow-box-dark">
            <div className="flex items-center">
              <div className="mr-4 flex h-12 w-12 items-center justify-center rounded-full bg-green-100 dark:bg-green-800">
                <span className="text-xl">üìà</span>
              </div>
              <div>
                <h3 className="text-xl font-semibold text-dark dark:text-white">
                  {Math.round(averageROI)}%
                </h3>
                <p className="text-body-color dark:text-dark-6">–°—Ä–µ–¥–Ω–∏–π ROI</p>
              </div>
            </div>
          </div>

          <div className="rounded-lg bg-white p-6 shadow-1 dark:bg-dark-2 dark:shadow-box-dark">
            <div className="flex items-center">
              <div className="mr-4 flex h-12 w-12 items-center justify-center rounded-full bg-purple-100 dark:bg-purple-800">
                <span className="text-xl">üë•</span>
              </div>
              <div>
                <h3 className="text-xl font-semibold text-dark dark:text-white">
                  {new Intl.NumberFormat('ru-RU').format(totalVisitors)}
                </h3>
                <p className="text-body-color dark:text-dark-6">–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏/–º–µ—Å—è—Ü</p>
              </div>
            </div>
          </div>

          <div className="rounded-lg bg-white p-6 shadow-1 dark:bg-dark-2 dark:shadow-box-dark">
            <div className="flex items-center">
              <div className="mr-4 flex h-12 w-12 items-center justify-center rounded-full bg-orange-100 dark:bg-orange-800">
                <span className="text-xl">ü§ù</span>
              </div>
              <div>
                <h3 className="text-xl font-semibold text-dark dark:text-white">
                  {new Intl.NumberFormat('ru-RU').format(totalPartnerEarnings)} ‚ÇΩ
                </h3>
                <p className="text-body-color dark:text-dark-6">–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –¥–æ—Ö–æ–¥—ã</p>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 gap-8 xl:grid-cols-2">
          {/* –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã */}
          <div className="rounded-lg bg-white p-6 shadow-1 dark:bg-dark-2 dark:shadow-box-dark">
            <div className="mb-6 flex items-center justify-between">
              <h5 className="text-xl font-semibold text-dark dark:text-white">
                –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
              </h5>
              <button className="rounded-lg bg-primary px-4 py-2 text-sm text-white hover:bg-primary-dark">
                –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
              </button>
            </div>
            
            <div className="space-y-4">
              {filteredTools.map((tool) => (
                <div key={tool.id} className="flex items-center justify-between rounded-lg border border-stroke p-4 dark:border-dark-3">
                  <div className="flex items-center">
                    <span className="mr-3 text-2xl">{tool.icon}</span>
                    <div>
                      <h6 className="font-medium text-dark dark:text-white">{tool.name}</h6>
                      <p className="text-sm text-body-color dark:text-dark-6">{tool.description}</p>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className={`inline-block rounded-full px-2 py-1 text-xs font-medium ${getStatusColor(tool.status)}`}>
                      {tool.status === "active" ? "–ê–∫—Ç–∏–≤–µ–Ω" : 
                       tool.status === "pending" ? "–û–∂–∏–¥–∞–µ—Ç" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}
                    </div>
                    <div className="mt-1 text-sm font-medium text-dark dark:text-white">
                      {tool.performance}%
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã */}
          <div className="rounded-lg bg-white p-6 shadow-1 dark:bg-dark-2 dark:shadow-box-dark">
            <div className="mb-6 flex items-center justify-between">
              <h5 className="text-xl font-semibold text-dark dark:text-white">
                –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
              </h5>
              <button className="rounded-lg bg-primary px-4 py-2 text-sm text-white hover:bg-primary-dark">
                –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É
              </button>
            </div>
            
            <div className="space-y-4">
              {partnerPrograms.map((program) => (
                <div key={program.id} className="rounded-lg border border-stroke p-4 dark:border-dark-3">
                  <div className="mb-3 flex items-center justify-between">
                    <h6 className="font-medium text-dark dark:text-white">{program.name}</h6>
                    <div className={`inline-block rounded-full px-2 py-1 text-xs font-medium ${getStatusColor(program.status)}`}>
                      {program.status === "active" ? "–ê–∫—Ç–∏–≤–Ω–∞" : "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"}
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-3 gap-4 text-sm">
                    <div>
                      <p className="text-body-color dark:text-dark-6">–ö–æ–º–∏—Å—Å–∏—è</p>
                      <p className="font-medium text-dark dark:text-white">{program.commission}%</p>
                    </div>
                    <div>
                      <p className="text-body-color dark:text-dark-6">–ü–∞—Ä—Ç–Ω–µ—Ä—ã</p>
                      <p className="font-medium text-dark dark:text-white">{program.activePartners}</p>
                    </div>
                    <div>
                      <p className="text-body-color dark:text-dark-6">–î–æ—Ö–æ–¥/–º–µ—Å—è—Ü</p>
                      <p className="font-medium text-dark dark:text-white">
                        {new Intl.NumberFormat('ru-RU').format(program.monthlyEarnings)} ‚ÇΩ
                      </p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é */}
        <div className="mt-8 rounded-lg bg-white p-6 shadow-1 dark:bg-dark-2 dark:shadow-box-dark">
          <h5 className="mb-6 text-xl font-semibold text-dark dark:text-white">
            –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é
          </h5>
          
          <div className="grid grid-cols-1 gap-6 md:grid-cols-2 xl:grid-cols-3">
            <div className="rounded-lg border border-stroke p-4 dark:border-dark-3">
              <div className="mb-3 flex items-center">
                <span className="mr-2 text-xl">üéØ</span>
                <h6 className="font-medium text-dark dark:text-white">–†–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥</h6>
              </div>
              <p className="text-sm text-body-color dark:text-dark-6">
                –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –Ω–∞ 15-25%
              </p>
              <button className="mt-3 text-sm text-primary hover:underline">
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å ‚Üí
              </button>
            </div>

            <div className="rounded-lg border border-stroke p-4 dark:border-dark-3">
              <div className="mb-3 flex items-center">
                <span className="mr-2 text-xl">üìß</span>
                <h6 className="font-medium text-dark dark:text-white">Email-–≤–æ—Ä–æ–Ω–∫–∞</h6>
              </div>
              <p className="text-sm text-body-color dark:text-dark-6">
                –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ email-–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è LTV
              </p>
              <button className="mt-3 text-sm text-primary hover:underline">
                –°–æ–∑–¥–∞—Ç—å –≤–æ—Ä–æ–Ω–∫—É ‚Üí
              </button>
            </div>

            <div className="rounded-lg border border-stroke p-4 dark:border-dark-3">
              <div className="mb-3 flex items-center">
                <span className="mr-2 text-xl">üí°</span>
                <h6 className="font-medium text-dark dark:text-white">A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h6>
              </div>
              <p className="text-sm text-body-color dark:text-dark-6">
                –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã –ª–µ–Ω–¥–∏–Ω–≥–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
              </p>
              <button className="mt-3 text-sm text-primary hover:underline">
                –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç ‚Üí
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SitusMarketing; 