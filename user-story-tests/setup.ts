/**
 * üß™ –ù–ê–°–¢–†–û–ô–ö–ê –¢–ï–°–¢–û–í–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø
 * 
 * –ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –•–∞–±—É—Å
 */

import { beforeAll, afterAll, beforeEach, afterEach } from 'vitest';
import { testInfrastructure, testMetrics } from './helpers/TestInfrastructure';

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
declare global {
  var testInfra: typeof testInfrastructure;
  var testMetrics: typeof testMetrics;
}

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
globalThis.testInfra = testInfrastructure;
globalThis.testMetrics = testMetrics;

/**
 * üöÄ –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–î –í–°–ï–ú–ò –¢–ï–°–¢–ê–ú–ò
 */
beforeAll(async () => {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
  const isHealthy = await testInfrastructure.healthCheck();
  if (!isHealthy) {
    console.warn('‚ö†Ô∏è  –°–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.');
  } else {
    console.log('‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã');
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ—Ç—Ä–∏–∫–∏
  testMetrics.startTimer();
  testMetrics.recordMetric('setup_start', new Date().toISOString());
  
  console.log('üéØ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ');
});

/**
 * üßπ –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ü–û–°–õ–ï –í–°–ï–• –¢–ï–°–¢–û–í
 */
afterAll(async () => {
  console.log('üßπ –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
  
  // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  await testInfrastructure.cleanup();
  
  // –õ–æ–≥–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  testMetrics.recordMetric('setup_end', new Date().toISOString());
  testMetrics.logSummary();
  
  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ');
});

/**
 * üîÑ –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–î –ö–ê–ñ–î–´–ú –¢–ï–°–¢–û–ú
 */
beforeEach(async (context) => {
  const testName = context.meta.name;
  console.log(`\nüß™ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ç–µ—Å—Ç—É: ${testName}`);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞
  testMetrics.recordMetric(`test_${testName}_start`, Date.now());
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
  const isHealthy = await testInfrastructure.healthCheck();
  if (!isHealthy) {
    console.warn(`‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∞: ${testName}`);
  }
});

/**
 * üßπ –û–ß–ò–°–¢–ö–ê –ü–û–°–õ–ï –ö–ê–ñ–î–û–ì–û –¢–ï–°–¢–ê
 */
afterEach(async (context) => {
  const testName = context.meta.name;
  const testResult = context.meta.result;
  
  console.log(`\nüèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞: ${testName} (${testResult?.state || 'unknown'})`);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
  testMetrics.recordMetric(`test_${testName}_end`, {
    endTime: Date.now(),
    result: testResult?.state || 'unknown',
    duration: testResult?.duration || 0
  });
  
  // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const users = testInfrastructure.getAllUsers();
  if (users.length > 0) {
    console.log(`üë• –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–µ—Å—Ç–µ: ${users.length}`);
  }
  
  // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  await testInfrastructure.sleep(100);
});

/**
 * üéØ –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –¢–ï–°–¢–û–í
 */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ö–µ–ª–ø–µ—Ä—ã
globalThis.createTestUser = testInfrastructure.createTestUser.bind(testInfrastructure);
globalThis.logTestState = testInfrastructure.logTestState.bind(testInfrastructure);
globalThis.sleep = testInfrastructure.sleep.bind(testInfrastructure);

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
export const TEST_CONFIG = {
  BASE_URL: 'http://localhost:3000',
  DEFAULT_TIMEOUT: 30000,
  RETRY_ATTEMPTS: 3,
  RETRY_DELAY: 1000,
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  REGISTRATION_BONUS: 500,
  AI_REQUEST_COST: 100,
  REFERRAL_BONUS: 1000,
  
  // Email –∫–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤
  EMAIL_VERIFICATION_CODE: '123456',
  FRIEND_EMAIL_CODE: '654321',
  
  // –ü–ª–∞—Ç–µ–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  TEST_PAYMENT_AMOUNT: 1000,
  PAYMENT_METHOD: 'yoomoney'
};

console.log('üìã –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', TEST_CONFIG);