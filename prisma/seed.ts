import { PrismaClient } from '@prisma/client';
import { hash } from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Seeding database...');

  // –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const adminPassword = await hash('admin123', 12);
  const admin = await prisma.user.upsert({
    where: { email: 'admin@startapus.com' },
    update: {},
    create: {
      username: 'admin',
      email: 'admin@startapus.com',
      password: adminPassword,
      role: 'ADMIN',
      status: 'ACTIVE',
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userPassword = await hash('user123', 12);
  const user = await prisma.user.upsert({
    where: { email: 'dmitriy@startapus.com' },
    update: {},
    create: {
      username: 'dmitriy',
      email: 'dmitriy@startapus.com',
      password: userPassword,
      role: 'BUSINESS',
      status: 'ACTIVE',
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ "–°–∞–π—Ç —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å"
  const startapusProject = await prisma.project.upsert({
    where: { id: 'startapus-ecosystem' },
    update: {},
    create: {
      id: 'startapus-ecosystem',
      name: '–°–∞–π—Ç —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
      description:
        '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ–±-–ø—Ä–æ–µ–∫—Ç–∞–º–∏',
      slug: 'startapus-ecosystem',
      domain: 'startapus.com',
      isPublished: true,
      ownerId: user.id,
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ Website –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –°—Ç–∞—Ä—Ç–∞–ø—É—Å
  const websiteProduct = await prisma.product.upsert({
    where: {
      projectId_name: {
        projectId: startapusProject.id,
        name: 'Website',
      },
    },
    update: {},
    create: {
      name: 'Website',
      description: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–∞',
      type: 'WEBSITE',
      status: 'ACTIVE',
      projectId: startapusProject.id,
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –°—Ç–∞—Ä—Ç–∞–ø—É—Å
  const pages = [
    {
      id: 'home',
      title: '–ì–ª–∞–≤–Ω–∞—è',
      slug: '',
      isHomePage: true,
      metaTitle: '–°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      metaDescription:
        '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–µ–±-—Å–∞–π—Ç—ã —Å —ç–∫–æ—Å–∏—Å—Ç–µ–º–æ–π –°—Ç–∞—Ä—Ç–∞–ø—É—Å. –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä, AI-–ø–æ–º–æ—â–Ω–∏–∫ –∏ –º–æ—â–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.',
      content: JSON.stringify({
        blocks: [
          {
            id: 'hero-1',
            type: 'hero-section',
            props: {
              title: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –±—É–¥—É—â–µ–µ –≤–µ–±–∞ —Å —ç–∫–æ—Å–∏—Å—Ç–µ–º–æ–π –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
              subtitle: '–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-—Å–∞–π—Ç–æ–≤ –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
              buttonText: '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
              buttonLink: '/situs',
              backgroundImage: '/images/hero-bg.jpg',
              overlayOpacity: 0.4,
            },
          },
          {
            id: 'products-1',
            type: 'products-section',
            props: {
              title: '–ù–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã',
              subtitle: '–ö–∞–∂–¥—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á',
              products: [
                {
                  name: 'Situs',
                  description: '–í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–∞–π—Ç–æ–≤',
                  icon: 'üèóÔ∏è',
                  features: ['Drag & Drop —Ä–µ–¥–∞–∫—Ç–æ—Ä', '–ì–æ—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏', '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω'],
                },
                {
                  name: 'Redaktus',
                  description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç-—Ä–µ–¥–∞–∫—Ç–æ—Ä',
                  icon: '‚úèÔ∏è',
                  features: ['–ë–ª–æ—á–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä', '–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞', '–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π'],
                },
                {
                  name: 'Hubus',
                  description: 'AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                  icon: 'ü§ñ',
                  features: ['–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SEO', '–ü–µ—Ä–µ–≤–æ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'],
                },
                {
                  name: 'Bilingus',
                  description: '–°–∏—Å—Ç–µ–º–∞ –±–∏–ª–ª–∏–Ω–≥–∞ –∏ –ø–ª–∞—Ç–µ–∂–µ–π',
                  icon: 'üí≥',
                  features: ['–ü–æ–¥–ø–∏—Å–∫–∏', '–ü–ª–∞—Ç–µ–∂–∏', '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤'],
                },
                {
                  name: 'Controlus',
                  description: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
                  icon: 'üìä',
                  features: ['–ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', '–û—Ç—á–µ—Ç—ã'],
                },
                {
                  name: 'Loginus',
                  description: '–ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
                  icon: 'üîê',
                  features: ['Single Sign-On', 'OAuth2', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'],
                },
              ],
            },
          },
        ],
      }),
    },
    {
      id: 'about',
      title: '–û –∫–æ–º–ø–∞–Ω–∏–∏',
      slug: 'about',
      metaTitle: '–û –∫–æ–º–ø–∞–Ω–∏–∏ –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ù–∞—à–∞ –º–∏—Å—Å–∏—è –∏ –∫–æ–º–∞–Ω–¥–∞',
      metaDescription: '–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –∫–æ–º–∞–Ω–¥–µ –°—Ç–∞—Ä—Ç–∞–ø—É—Å, –Ω–∞—à–µ–π –º–∏—Å—Å–∏–∏ –∏ –≤–∏–¥–µ–Ω–∏–∏ –±—É–¥—É—â–µ–≥–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.',
      content: JSON.stringify({
        blocks: [
          {
            id: 'about-hero',
            type: 'text-section',
            props: {
              title: '–û –∫–æ–º–ø–∞–Ω–∏–∏ –°—Ç–∞—Ä—Ç–∞–ø—É—Å',
              content:
                '–ú—ã —Å–æ–∑–¥–∞–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤ –ø—Ä–æ—Å—Ç—ã–º –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –≤—Å–µ—Ö.',
              layout: 'centered',
            },
          },
          {
            id: 'mission',
            type: 'mission-section',
            props: {
              title: '–ù–∞—à–∞ –º–∏—Å—Å–∏—è',
              mission:
                '–î–µ–º–æ–∫—Ä–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ –∫–∞–∂–¥–æ–º—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã –±–µ–∑ –≥–ª—É–±–æ–∫–∏—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π.',
              values: [
                '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –≤ –∫–∞–∂–¥–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ',
                '–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
                '–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å',
                '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
              ],
            },
          },
        ],
      }),
    },
    {
      id: 'products',
      title: '–ü—Ä–æ–¥—É–∫—Ç—ã',
      slug: 'products',
      metaTitle: '–ü—Ä–æ–¥—É–∫—Ç—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ü–æ–ª–Ω–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      metaDescription:
        '–ò–∑—É—á–∏—Ç–µ –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å: Situs, Redaktus, Hubus, Bilingus, Controlus –∏ Loginus.',
      content: JSON.stringify({
        blocks: [
          {
            id: 'products-detail',
            type: 'products-detail-section',
            props: {
              title: '–ü—Ä–æ–¥—É–∫—Ç—ã —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã',
              description: '–ö–∞–∂–¥—ã–π –ø—Ä–æ–¥—É–∫—Ç —Ä–µ—à–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –µ–¥–∏–Ω–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ',
            },
          },
        ],
      }),
    },
    {
      id: 'blog',
      title: '–ë–ª–æ–≥',
      slug: 'blog',
      metaTitle: '–ë–ª–æ–≥ –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –ù–æ–≤–æ—Å—Ç–∏ –∏ —Å—Ç–∞—Ç—å–∏ –æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
      metaDescription: '–ß–∏—Ç–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, –≥–∞–π–¥—ã –∏ —Å—Ç–∞—Ç—å–∏ –æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤ –±–ª–æ–≥–µ –°—Ç–∞—Ä—Ç–∞–ø—É—Å.',
      content: JSON.stringify({
        blocks: [
          {
            id: 'blog-list',
            type: 'blog-section',
            props: {
              title: '–ë–ª–æ–≥',
              subtitle: '–ù–æ–≤–æ—Å—Ç–∏, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Ç–∞—Ç—å–∏',
            },
          },
        ],
      }),
    },
    {
      id: 'contact',
      title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
      slug: 'contact',
      metaTitle: '–ö–æ–Ω—Ç–∞–∫—Ç—ã –°—Ç–∞—Ä—Ç–∞–ø—É—Å - –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏',
      metaDescription: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–æ–º–∞–Ω–¥–æ–π –°—Ç–∞—Ä—Ç–∞–ø—É—Å. –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.',
      content: JSON.stringify({
        blocks: [
          {
            id: 'contact-form',
            type: 'contact-section',
            props: {
              title: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏',
              subtitle: '–ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã',
              email: 'hello@startapus.com',
              phone: '+7 (495) 123-45-67',
              address: '–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è',
            },
          },
        ],
      }),
    },
  ];

  for (const pageData of pages) {
    await prisma.page.upsert({
      where: {
        productId_slug: {
          productId: websiteProduct.id,
          slug: pageData.slug,
        },
      },
      update: {},
      create: {
        ...pageData,
        productId: websiteProduct.id,
        pageType: 'PAGE',
        status: 'PUBLISHED',
      },
    });
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
  const testProject = await prisma.project.create({
    data: {
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω',
      description: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞',
      slug: 'test-ecommerce-store',
      ownerId: user.id,
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ Store –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
  const storeProduct = await prisma.product.create({
    data: {
      name: 'Store',
      description: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω',
      type: 'ECOMMERCE',
      status: 'ACTIVE',
      projectId: testProject.id,
    },
  });

  await prisma.page.create({
    data: {
      title: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞',
      slug: '',
      isHomePage: true,
      productId: storeProduct.id,
      pageType: 'PAGE',
      status: 'PUBLISHED',
      content: JSON.stringify({
        blocks: [
          {
            id: 'shop-hero',
            type: 'ecommerce-hero',
            props: {
              title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω',
              subtitle: '–õ—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º',
            },
          },
        ],
      }),
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –°—Ç–∞—Ä—Ç–∞–ø—É—Å
  const mainMenuType = await prisma.menuType.upsert({
    where: {
      projectId_name: {
        projectId: startapusProject.id,
        name: 'main',
      },
    },
    update: {},
    create: {
      name: 'main',
      title: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      description: '–û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é —Å–∞–π—Ç–∞',
      isActive: true,
      projectId: startapusProject.id,
    },
  });

  const footerMenuType = await prisma.menuType.upsert({
    where: {
      projectId_name: {
        projectId: startapusProject.id,
        name: 'footer',
      },
    },
    update: {},
    create: {
      name: 'footer',
      title: '–ú–µ–Ω—é –ø–æ–¥–≤–∞–ª–∞',
      description: '–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é –≤ –ø–æ–¥–≤–∞–ª–µ —Å–∞–π—Ç–∞',
      isActive: true,
      projectId: startapusProject.id,
    },
  });

  const sidebarMenuType = await prisma.menuType.upsert({
    where: {
      projectId_name: {
        projectId: startapusProject.id,
        name: 'sidebar',
      },
    },
    update: {},
    create: {
      name: 'sidebar',
      title: '–ë–æ–∫–æ–≤–æ–µ –º–µ–Ω—é',
      description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏',
      isActive: true,
      projectId: startapusProject.id,
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
  const mainMenuItems = [
    {
      title: '–ì–ª–∞–≤–Ω–∞—è',
      alias: 'home',
      type: 'COMPONENT',
      component: 'Website',
      view: 'page',
      layout: 'default',
      targetId: 'home',
      orderIndex: 1,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        menu_image: '',
        css_class: 'nav-home',
      }),
    },
    {
      title: '–û –∫–æ–º–ø–∞–Ω–∏–∏',
      alias: 'about',
      type: 'COMPONENT',
      component: 'Website',
      view: 'page',
      layout: 'default',
      targetId: 'about',
      orderIndex: 2,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        menu_image: '',
        css_class: 'nav-about',
      }),
    },
    {
      title: '–ü—Ä–æ–¥—É–∫—Ç—ã',
      alias: 'products',
      type: 'COMPONENT',
      component: 'Website',
      view: 'page',
      layout: 'default',
      targetId: 'products',
      orderIndex: 3,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        menu_image: '',
        css_class: 'nav-products',
      }),
    },
    {
      title: '–ë–ª–æ–≥',
      alias: 'blog',
      type: 'COMPONENT',
      component: 'Website',
      view: 'page',
      layout: 'default',
      targetId: 'blog',
      orderIndex: 4,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        menu_image: '',
        css_class: 'nav-blog',
      }),
    },
    {
      title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
      alias: 'contact',
      type: 'COMPONENT',
      component: 'Website',
      view: 'page',
      layout: 'default',
      targetId: 'contact',
      orderIndex: 5,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        menu_image: '',
        css_class: 'nav-contact',
      }),
    },
  ];

  // –°–æ–∑–¥–∞–µ–º –ø—É–Ω–∫—Ç—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
  for (const itemData of mainMenuItems) {
    await prisma.menuItem.upsert({
      where: {
        menuTypeId_alias: {
          menuTypeId: mainMenuType.id,
          alias: itemData.alias,
        },
      },
      update: {},
      create: {
        ...itemData,
        menuTypeId: mainMenuType.id,
        isPublished: true,
        accessLevel: 'PUBLIC',
        language: '*',
      },
    });
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é –ø–æ–¥–≤–∞–ª–∞
  const footerMenuItems = [
    {
      title: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
      alias: 'privacy',
      type: 'URL',
      externalUrl: '/privacy',
      orderIndex: 1,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        target: '_self',
        css_class: 'footer-link',
      }),
    },
    {
      title: '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
      alias: 'terms',
      type: 'URL',
      externalUrl: '/terms',
      orderIndex: 2,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        target: '_self',
        css_class: 'footer-link',
      }),
    },
    {
      title: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
      alias: 'support',
      type: 'URL',
      externalUrl: 'mailto:support@startapus.com',
      orderIndex: 3,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        target: '_blank',
        css_class: 'footer-link',
      }),
    },
  ];

  // –°–æ–∑–¥–∞–µ–º –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –ø–æ–¥–≤–∞–ª–∞
  for (const itemData of footerMenuItems) {
    await prisma.menuItem.upsert({
      where: {
        menuTypeId_alias: {
          menuTypeId: footerMenuType.id,
          alias: itemData.alias,
        },
      },
      update: {},
      create: {
        ...itemData,
        menuTypeId: footerMenuType.id,
        isPublished: true,
        accessLevel: 'PUBLIC',
        language: '*',
      },
    });
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –º–µ–Ω—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ (–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω)
  const shopMainMenuType = await prisma.menuType.upsert({
    where: {
      projectId_name: {
        projectId: testProject.id,
        name: 'main',
      },
    },
    update: {},
    create: {
      name: 'main',
      title: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞',
      description: '–û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞',
      isActive: true,
      projectId: testProject.id,
    },
  });

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞
  const shopMenuItems = [
    {
      title: '–ì–ª–∞–≤–Ω–∞—è',
      alias: 'home',
      type: 'COMPONENT',
      component: 'Store',
      view: 'home',
      layout: 'default',
      orderIndex: 1,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        show_featured: true,
        css_class: 'shop-nav-home',
      }),
    },
    {
      title: '–ö–∞—Ç–∞–ª–æ–≥',
      alias: 'catalog',
      type: 'HEADING',
      orderIndex: 2,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        css_class: 'shop-nav-heading',
      }),
    },
    {
      title: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
      alias: 'electronics',
      type: 'COMPONENT',
      component: 'Store',
      view: 'category',
      layout: 'grid',
      parentId: null, // –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
      orderIndex: 1,
      level: 2,
      parameters: JSON.stringify({
        menu_show: true,
        items_per_page: 12,
        css_class: 'shop-nav-category',
      }),
    },
    {
      title: '–û–¥–µ–∂–¥–∞',
      alias: 'clothing',
      type: 'COMPONENT',
      component: 'Store',
      view: 'category',
      layout: 'grid',
      parentId: null, // –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
      orderIndex: 2,
      level: 2,
      parameters: JSON.stringify({
        menu_show: true,
        items_per_page: 12,
        css_class: 'shop-nav-category',
      }),
    },
    {
      title: '–û –º–∞–≥–∞–∑–∏–Ω–µ',
      alias: 'about-shop',
      type: 'COMPONENT',
      component: 'Website',
      view: 'page',
      layout: 'default',
      orderIndex: 3,
      level: 1,
      parameters: JSON.stringify({
        menu_show: true,
        css_class: 'shop-nav-about',
      }),
    },
  ];

  // –°–æ–∑–¥–∞–µ–º –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é
  const createdShopItems = [];
  for (const itemData of shopMenuItems) {
    const item = await prisma.menuItem.upsert({
      where: {
        menuTypeId_alias: {
          menuTypeId: shopMainMenuType.id,
          alias: itemData.alias,
        },
      },
      update: {},
      create: {
        ...itemData,
        menuTypeId: shopMainMenuType.id,
        isPublished: true,
        accessLevel: 'PUBLIC',
        language: '*',
      },
    });
    createdShopItems.push(item);
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —Å–≤—è–∑–∏ –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const catalogItem = createdShopItems.find((item) => item.alias === 'catalog');
  if (catalogItem) {
    await prisma.menuItem.updateMany({
      where: {
        menuTypeId: shopMainMenuType.id,
        alias: { in: ['electronics', 'clothing'] },
      },
      data: {
        parentId: catalogItem.id,
      },
    });
  }

  console.log('‚úÖ Database seeded successfully!');
  console.log('\nüìä Created:');
  console.log(`- Admin user: admin@startapus.com / admin123`);
  console.log(`- User: dmitriy@startapus.com / user123`);
  console.log(`- Project: ${startapusProject.name}`);
  console.log(`- Pages: ${pages.length} pages`);
  console.log(`- Menu Types: 4 types (main, footer, sidebar for Startapus + main for shop)`);
  console.log(`- Menu Items: ${mainMenuItems.length + footerMenuItems.length + shopMenuItems.length} items`);
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding database:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
